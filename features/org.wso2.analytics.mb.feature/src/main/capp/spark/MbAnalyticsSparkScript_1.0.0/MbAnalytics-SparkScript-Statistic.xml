<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>MbAnalytics-SparkScript-Statistic</Name>
    <Script>
        CREATE TEMPORARY TABLE mbTimerStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_TimerStatsMinute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, source FACET -i, name FACET -i,
        type FACET -i, destination FACET -i, maxDuration DOUBLE, meanDuration DOUBLE, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, minute, name, type, destination, source",
        incrementalParams "mbTimerStatPerMinute, HOUR",
        mergeSchema "false");

        CREATE TEMPORARY TABLE mbMeterStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_MeterStatsMinute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, source FACET -i, name FACET -i,
        type FACET -i, destination FACET -i, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, minute, name, type, destination, source",
        incrementalParams "mbMeterStatPerMinute, HOUR",
        mergeSchema "false");

        CREATE TEMPORARY TABLE mbGaugeStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_GaugeStatsMinute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, source FACET -i, name FACET -i,
        type FACET -i, destination FACET -i, value DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, minute, name, type, destination, source",
        incrementalParams "mbGaugeStatPerMinute, HOUR",
        mergeSchema "false");

        CREATE TEMPORARY TABLE mbCounterStatPerMinute USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_CounterStatsMinute",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, minute INT -i, source FACET -i, name FACET -i,
        type FACET -i, destination FACET -i, totalCount LONG, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, minute, name, type, destination, source",
        incrementalParams "mbCounterStatPerMinute, HOUR",
        mergeSchema "false");

        CREATE TEMPORARY TABLE mbTimerStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_TimerStatsHour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, maxDuration DOUBLE, meanDuration DOUBLE, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, name, type, destination, source",
        incrementalParams "mbTimerStatPerHour, DAY",
        mergeSchema "false");

        INSERT INTO TABLE mbTimerStatPerHour
        SELECT year, month, day, hour, source, name, type, destination, MAX(maxDuration) as maxDuration,
        AVG(meanDuration) as meanDuration, AVG(rate) as rate, meta_tenantDomain,
        getHourStartingTime(year, month, day, hour) as _timestamp
        FROM mbTimerStatPerMinute
        GROUP BY
        year, month, day, hour, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbTimerStatPerMinute;

        CREATE TEMPORARY TABLE mbMeterStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_MeterStatsHour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, name, type, destination, source",
        incrementalParams "mbMeterStatPerHour, DAY",
        mergeSchema "false");

        INSERT INTO TABLE mbMeterStatPerHour
        SELECT year, month, day, hour, source, name, type, destination, AVG(rate) as rate, meta_tenantDomain,
        getHourStartingTime(year, month, day, hour) as _timestamp
        FROM mbMeterStatPerMinute
        GROUP BY
        year, month, day, hour, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbMeterStatPerMinute;

        CREATE TEMPORARY TABLE mbGaugeStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_GaugeStatsHour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, value DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, name, type, destination, source",
        incrementalParams "mbGaugeStatPerHour, DAY",
        mergeSchema "false");

        INSERT INTO TABLE mbGaugeStatPerHour
        SELECT year, month, day, hour, source, name, type, destination, AVG(value) as value, meta_tenantDomain,
        getHourStartingTime(year, month, day, hour) as _timestamp
        FROM mbGaugeStatPerMinute
        GROUP BY
        year, month, day, hour, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbGaugeStatPerMinute;

        CREATE TEMPORARY TABLE mbCounterStatPerHour USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_CounterStatsHour",
        schema "year INT -i, month INT -i, day INT -i, hour INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, totalCount LONG, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, hour, name, type, destination, source",
        incrementalParams "mbCounterStatPerHour, DAY",
        mergeSchema "false");

        INSERT INTO TABLE mbCounterStatPerHour
        SELECT year, month, day, hour, source, name, type, destination, MAX(totalCount), meta_tenantDomain,
        getHourStartingTime(year, month, day, hour) as _timestamp
        FROM mbCounterStatPerMinute
        GROUP BY
        year, month, day, hour, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbCounterStatPerMinute;

        CREATE TEMPORARY TABLE mbTimerStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_TimerStatsDay",
        schema "year INT -i, month INT -i, day INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, maxDuration DOUBLE, meanDuration DOUBLE, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbTimerStatPerDay
        SELECT year, month, day, source, name, type, destination, MAX(maxDuration) as maxDuration,
        AVG(meanDuration) as meanDuration, AVG(rate) as rate, meta_tenantDomain,
        getDateStartingTime(year, month, day) as _timestamp
        FROM mbTimerStatPerHour
        GROUP BY
        year, month, day, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbTimerStatPerHour;

        CREATE TEMPORARY TABLE mbMeterStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_MeterStatsDay",
        schema "year INT -i, month INT -i, day INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbMeterStatPerDay
        SELECT year, month, day, source, name, type, destination, AVG(rate) as rate, meta_tenantDomain,
        getDateStartingTime(year, month, day) as _timestamp
        FROM mbMeterStatPerHour
        GROUP BY
        year, month, day, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbMeterStatPerHour;

        CREATE TEMPORARY TABLE mbGaugeStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_GaugeStatsDay",
        schema "year INT -i, month INT -i, day INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, value DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbGaugeStatPerDay
        SELECT year, month, day, source, name, type, destination, AVG(value) as value, meta_tenantDomain,
        getDateStartingTime(year, month, day) as _timestamp
        FROM mbGaugeStatPerHour
        GROUP BY
        year, month, day, name, type, destination, source, meta_tenantDomain;

        CREATE TEMPORARY TABLE mbCounterStatPerDay USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_CounterStatsDay",
        schema "year INT -i, month INT -i, day INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, totalCount LONG, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, day, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbCounterStatPerDay
        SELECT year, month, day, source, name, type, destination, MAX(totalCount), meta_tenantDomain,
        getDateStartingTime(year, month, day) as _timestamp
        FROM mbCounterStatPerHour
        GROUP BY
        year, month, day, name, type, destination, source, meta_tenantDomain;

        INCREMENTAL_TABLE_COMMIT mbCounterStatPerHour;

        CREATE TEMPORARY TABLE mbTimerStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_TimerStatsMonth",
        schema "year INT -i, month INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, maxDuration DOUBLE, meanDuration DOUBLE, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbTimerStatPerMonth
        SELECT year, month, source, name, type, destination, MAX(maxDuration) as maxDuration,
        AVG(meanDuration) as meanDuration, AVG(rate) as rate, meta_tenantDomain,
        getMonthStartingTime(year, month) as _timestamp
        FROM mbTimerStatPerDay
        GROUP BY
        year, month, name, type, destination, source, meta_tenantDomain;

        CREATE TEMPORARY TABLE mbMeterStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_MeterStatsMonth",
        schema "year INT -i, month INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, rate DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbMeterStatPerMonth
        SELECT year, month, source, name, type, destination, AVG(rate) as rate, meta_tenantDomain,
        getMonthStartingTime(year, month) as _timestamp
        FROM mbMeterStatPerDay
        GROUP BY
        year, month, name, type, destination, source, meta_tenantDomain;

        CREATE TEMPORARY TABLE mbGaugeStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_GaugeStatsMonth",
        schema "year INT -i, month INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, value DOUBLE, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbGaugeStatPerMonth
        SELECT year, month, source, name, type, destination, AVG(value) as value, meta_tenantDomain,
        getMonthStartingTime(year, month) as _timestamp
        FROM mbGaugeStatPerDay
        GROUP BY
        year, month, name, type, destination, source, meta_tenantDomain;

        CREATE TEMPORARY TABLE mbCounterStatPerMonth USING CarbonAnalytics
        OPTIONS (tableName "org_wso2_mb_analytics_stream_CounterStatsMonth",
        schema "year INT -i, month INT -i, source FACET -i, name FACET -i, type FACET -i,
        destination FACET -i, totalCount LONG, meta_tenantDomain FACET -i, _timestamp LONG -i",
        primaryKeys "year, month, name, type, destination, source",
        mergeSchema "false");

        INSERT INTO TABLE mbCounterStatPerMonth
        SELECT year, month, source, name, type, destination, MAX(totalCount), meta_tenantDomain,
        getMonthStartingTime(year, month) as _timestamp
        FROM mbCounterStatPerDay
        GROUP BY
        year, month, name, type, destination, source, meta_tenantDomain;
    </Script>
    <CronExpression>0 0/2 * * * ? *</CronExpression>
</Analytics>
